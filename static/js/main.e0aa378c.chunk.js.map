{"version":3,"sources":["InputData.js","components/Form.js","components/PracticalForm.js","components/EducationalForm.js","components/Section.js","components/Exp.js","components/SoloInput.js","components/DisplayField.js","components/Main.js","components/Header.js","components/ModeController.js","App.js","reportWebVitals.js","index.js"],"names":["InputData","title","type","description","Form","props","className","onSubmit","handleSubmit","children","onClick","toggleDisplay","WorkForm","handleChange","event","console","log","target","name","value","setState","preventDefault","newWorkItem","getStateInList","list","addWorkList","id","state","uniqid","company","position","mainTask","jobStart","formatISO","Date","representation","jobEnd","obj","forEach","item","inputs","filter","input","includes","map","htmlFor","onChange","this","Component","SchoolForm","newItem","addItem","university","major","studyStart","studyEnd","univeristy","format","Section","toUpperCase","Exp","removeWorkList","SoloInput","changeSingleState","data","handleKeyPress","key","autoFocus","tabIndex","onKeyPress","onBlur","DisplayField","display","fieldName","onFocus","isInEditMode","MainSection","getData","field","prevState","isEditing","firstName","lastName","email","phoneNumber","render","mainList","mainData","element","icon","faPaperPlane","size","Header","ModeController","inInEditMode","editClass","previewClass","handleClick","button","setMode","workList","schoolList","App","mode","stateName","newValue","removeItem","updatedWorkList","exp","form","formState","schoolName","dateOfStudy","isEditingWorkExp","isEditingSchoolExp","practialForm","PracticalForm","workExpDiv","workItem","schoolForm","e","schoolExpList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"qaAoEeA,EApEG,CAChB,CACEC,MAAO,YACPC,KAAM,OACNC,YAAa,QAEf,CACEF,MAAO,WACPC,KAAM,OACNC,YAAa,QAEf,CACEF,MAAO,QACPC,KAAM,QACNC,YAAa,SAEf,CACEF,MAAO,cACPC,KAAM,QACNC,YAAa,SAEf,CACEF,MAAO,aACPC,KAAM,OACNC,YAAa,eAEf,CACEF,MAAO,QACPC,KAAM,OACNC,YAAa,SAEf,CACEF,MAAO,aACPC,KAAM,SACNC,YAAa,uBAEf,CACEF,MAAO,WACPC,KAAM,SACNC,YAAa,qBAEf,CACEF,MAAO,UACPC,KAAM,OACNC,YAAa,gBAEf,CACEF,MAAO,WACPC,KAAM,OACNC,YAAa,YAEf,CACEF,MAAO,WACPC,KAAM,OACNC,YAAa,oBAEf,CACEF,MAAO,WACPC,KAAM,OACNC,YAAa,qBAEf,CACEF,MAAO,SACPC,KAAM,OACNC,YAAa,oB,uBC9DF,SAASC,EAAKC,GAC3B,OACE,uBAAMC,UAAU,OAAOC,SAAUF,EAAMG,aAAvC,UACGH,EAAMI,SACP,wBAAQP,KAAK,SAASI,UAAU,SAAhC,iBAGA,wBAAQJ,KAAK,SAASQ,QAASL,EAAMM,cAAeL,UAAU,SAA9D,uB,ICwESM,E,kDAxEb,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IAWRQ,aAAe,SAACC,GACdC,QAAQC,IAAI,YACZ,MAAwBF,EAAMG,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,EAAKC,SAAL,eACGF,EAAOC,KAhBO,EAoBnBX,aAAe,SAACM,GACdA,EAAMO,iBACN,IAAMC,EAAc,EAAKC,eAAeC,GACxC,EAAKnB,MAAMoB,YAAX,2BAA4BH,GAA5B,IAAyCI,GAAI,EAAKC,MAAMD,MACxD,EAAKN,SAAS,CACZM,GAAIE,MACJC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,SAAUC,YAAU,IAAIC,KAAQ,CAAEC,eAAgB,SAClDC,OAAQH,YAAU,IAAIC,KAAQ,CAAEC,eAAgB,YA9BjC,EAkCnBZ,eAAiB,SAACC,GAChB,IAAIa,EAAM,GAIV,OAHAb,EAAKc,SAAQ,SAACC,GACZF,EAAG,2BAAQA,GAAR,kBAAcE,EAAO,EAAKZ,MAAMY,QAE9BF,GArCP,EAAKV,MAAQ,CACXD,GAAIE,MACJC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,SAAUC,YAAU,IAAIC,KAAQ,CAAEC,eAAgB,SAClDC,OAAQH,YAAU,IAAIC,KAAQ,CAAEC,eAAgB,UARjC,E,0CA0CnB,WAAU,IAAD,OACDK,EAASxC,EAAUyC,QAAO,SAACC,GAAD,OAAWlB,EAAKmB,SAASD,EAAMzC,UAAQ2C,KACrE,SAACF,GACC,OACE,sBAAuBpC,UAAU,iBAAjC,UACE,uBAAOuC,QAASH,EAAMzC,MAAOK,UAAU,QAAvC,SACGoC,EAAMvC,cAET,uBACEuB,GAAIgB,EAAMzC,MACVC,KAAMwC,EAAMxC,KACZgB,KAAMwB,EAAMzC,MACZkB,MAAO,EAAKQ,MAAMe,EAAMzC,OACxB6C,SAAU,EAAKjC,iBATT6B,EAAMzC,UAetB,OACE,cAAC,EAAD,CACEO,aAAcuC,KAAKvC,aACnBG,cAAeoC,KAAK1C,MAAMM,cAF5B,SAIG6B,Q,GAnEcQ,a,QCsERC,E,kDArEb,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IAURQ,aAAe,SAACC,GACd,MAAwBA,EAAMG,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,EAAKC,SAAL,eACGF,EAAOC,KAdO,EAkBnBX,aAAe,SAACM,GACdA,EAAMO,iBACN,IAAM6B,EAAU,EAAK3B,eAAeC,GACpC,EAAKnB,MAAM8C,QAAX,2BAAwBD,GAAxB,IAAiCxB,GAAI,EAAKC,MAAMD,MAChD,EAAKN,SAAS,CACZM,GAAIE,MACJwB,WAAY,GACZC,MAAO,GACPC,WAAYrB,YAAU,IAAIC,KAAQ,QAClCqB,SAAUtB,YAAU,IAAIC,KAAQ,WA3BjB,EA+BnBX,eAAiB,SAACC,GAChB,IAAIa,EAAM,GAIV,OAHAb,EAAKc,SAAQ,SAACC,GACZF,EAAG,2BAAQA,GAAR,kBAAcE,EAAO,EAAKZ,MAAMY,QAE9BF,GAlCP,EAAKV,MAAQ,CACXD,GAAIE,MACJ4B,WAAY,GACZH,MAAO,GACPC,WAAYG,YAAO,IAAIvB,KAAQ,QAC/BqB,SAAUE,YAAO,IAAIvB,KAAQ,SAPd,E,0CAuCnB,WAAU,IAAD,OACDM,EAASxC,EAAUyC,QAAO,SAACC,GAAD,OAAWlB,EAAKmB,SAASD,EAAMzC,UAAQ2C,KACrE,SAACF,GACC,OACE,sBAAuBpC,UAAU,iBAAjC,UACE,uBAAOuC,QAASH,EAAMzC,MAAOK,UAAU,QAAvC,SACGoC,EAAMvC,cAET,uBACEuB,GAAIgB,EAAMzC,MACVC,KAAMwC,EAAMxC,KACZgB,KAAMwB,EAAMzC,MACZkB,MAAO,EAAKQ,MAAMe,EAAMzC,OACxB6C,SAAU,EAAKjC,iBATT6B,EAAMzC,UAetB,OACE,cAAC,EAAD,CACEO,aAAcuC,KAAKvC,aACnBG,cAAeoC,KAAK1C,MAAMM,cAF5B,SAIG6B,Q,GAhEgBQ,a,kBCGVU,MATf,SAAiBrD,GACf,OACE,0BAASC,UAAU,UAAnB,UACE,oBAAIA,UAAU,gBAAd,SAA+BD,EAAMJ,MAAM0D,gBAC1CtD,EAAMI,a,MCJE,SAASmD,EAAIvD,GAI1B,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SAA2BD,EAAMI,WACjC,qBAAKH,UAAU,UAAf,SACE,wBAAQA,UAAU,UAAlB,SACE,sBAAMA,UAAU,iBAAiBI,QARrB,WAClBL,EAAMwD,kBAOA,2B,ICTWC,E,kDACnB,WAAYzD,GAAQ,IAAD,8BACjB,cAAMA,IAMRQ,aAAe,SAACC,GACd,EAAKM,SAAS,CAAED,MAAOL,EAAMG,OAAOE,QACpC,EAAKd,MAAM0D,kBAAkB,EAAK1D,MAAM2D,KAAK/D,MAAOa,EAAMG,OAAOE,QAThD,EAYnB8C,eAAiB,SAACnD,GAEJ,UADAA,EAAMoD,KAEhB,EAAK7D,MAAMM,cAAc,EAAKN,MAAM2D,KAAK/D,QAb3C,EAAK0B,MAAQ,CACXR,MAAO,IAHQ,E,0CAmBnB,WAAU,IAAD,OACP,EAAwB4B,KAAK1C,MAAM2D,KAA3B9D,EAAR,EAAQA,KAAMD,EAAd,EAAcA,MAEd,OACE,uBACEkE,WAAW,EACXC,SAAS,IACTlE,KAAMA,EACNgB,KAAMjB,EACNkB,MAAO4B,KAAKpB,MAAMR,MAClB2B,SAAUC,KAAKlC,aACfwD,WAAYtB,KAAKkB,eACjBK,OAAQ,kBAAM,EAAKjE,MAAMM,cAAc,EAAKN,MAAM2D,KAAK/D,c,GAhCxB+C,a,MCAxB,SAASuB,EAAalE,GACnC,IAKImE,EACAlE,EAAY,GAShB,MARwB,cAApBD,EAAMoE,WAAiD,aAApBpE,EAAMoE,WAC3CD,EAAU,oBAAIlE,UAAU,cAAd,SAA6BD,EAAMc,QAC7Cb,GAAa,UAEbkE,EAAU,mBAAGlE,UAAU,cAAb,SAA4BD,EAAMc,QAC5Cb,GAAa,QAIb,qBACE8D,SAAS,IACTM,QAlBgB,WACdrE,EAAMsE,cACRtE,EAAMM,cAAcN,EAAMoE,YAiB1BnE,UAAW,eAAiBA,EAH9B,SAKGkE,I,UCjBcI,E,kDACnB,WAAYvE,GAAQ,IAAD,8BACjB,cAAMA,IAWRwE,QAAU,SAAC3D,GAIT,OAHgBlB,EAAUyC,QAAO,SAACF,GAChC,OAAOA,EAAKtC,QAAUiB,KAET,IAhBE,EAmBnBP,cAAgB,SAACmE,GACf,EAAK1D,UAAS,SAAC2D,GACb,MAAO,CACLC,UAAU,2BACLD,EAAUC,WADN,kBAENF,GAASC,EAAUC,UAAUF,UAtBpC,EAAKnD,MAAQ,CACXqD,UAAW,CACTC,WAAW,EACXC,UAAU,EACVC,OAAO,EACPC,aAAa,IAPA,E,0CA8BnB,WAAU,IAAD,OACDC,EAAS,GAkBf,OAjBAC,EAAShD,SAAQ,SAACC,GAChB8C,EAAO9C,GAAQ,EAAKZ,MAAMqD,UAAUzC,GAClC,cAAC,EAAD,CACE5B,cAAe,EAAKA,cACpBqD,KAAM,EAAKa,QAAQtC,GACnBwB,kBAAmB,EAAK1D,MAAM0D,oBAGhC,cAAC,EAAD,CACEpD,cAAe,EAAKA,cACpB8D,UAAWlC,EACXpB,MAAO,EAAKd,MAAMkF,SAAShD,GAC3BoC,aAAc,EAAKtE,MAAMsE,kBAM7B,sBAAKrE,UAAU,OAAf,UACE,sBAAKA,UAAU,YAAf,UACG+E,EAAOJ,UACPI,EAAOH,YAEV,sBAAK5E,UAAU,aAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAMA,UAAU,iBAAhB,mBACC+E,EAAOF,SAGV,sBAAK7E,UAAU,SAAf,UACE,sBAAMA,UAAU,iBAAhB,mBACC+E,EAAOD,yB,GAhEqBpC,a,wBCFnCwC,EAAU,cAAC,IAAD,CAAiBC,KAAMC,IAAcC,KAAK,OAW3CC,MATf,SAAgBvF,GACd,OACE,sBAAKC,UAAU,SAAf,UACGkF,EACD,oD,MCTS,SAASK,EAAexF,GACrC,IAAMyF,EAAezF,EAAMsE,aACrBoB,EAAYD,EAAe,UAAY,GACvCE,EAAeF,EAAe,GAAK,UAEnCG,EAAc,SAACC,GACJ,YAAXA,GAAwBJ,EAC1BzF,EAAM8F,QAAQ,WACM,SAAXD,GAAsBJ,GAC/BzF,EAAM8F,QAAQ,SAIlB,OACE,sBAAK7F,UAAU,iBAAf,UACE,wBACEA,UAAW,cAAgByF,EAC3BrF,QAAS,kBAAMuF,EAAY,SAF7B,uBAMA,wBACE3F,UAAW,iBAAmB0F,EAC9BtF,QAAS,kBAAMuF,EAAY,YAF7B,6BCXN,IAAMG,EAAW,CAAC,UAAW,WAAY,WAAY,WAAY,UAC3DC,EAAa,CAAC,aAAc,QAAS,aAAc,YACnDf,EAAW,CAAC,YAAa,WAAY,QAAS,eA8IrCgB,E,kDA3Ib,aAAe,IAAD,8BACZ,gBAiBFH,QAAU,SAACI,GACI,SAATA,EACF,EAAKnF,SAAS,CAAEuD,cAAc,IAE9B,EAAKvD,SAAS,CAAEuD,cAAc,KAtBpB,EA0BdZ,kBAAoB,SAACyC,EAAWC,GAC9B,EAAKrF,SAAL,eAAiBoF,EAAYC,IAC7B1F,QAAQC,IAAI,MAAO,EAAKW,MAAM6E,KA5BlB,EA+BdrD,QAAU,SAACZ,GAA6B,IAAvBf,EAAsB,uDAAf,WACtB,EAAKJ,UAAS,SAAC2D,GACb,OAAO,eAAGvD,EAAV,sBAAqBuD,EAAUvD,IAA/B,CAAsCe,SAjC5B,EAqCdmE,WAAa,SAAChF,GAA2B,IAAvBF,EAAsB,uDAAf,WACvB,EAAKJ,UAAS,SAAC2D,GACb,IAAM4B,EAAkB5B,EAAUvD,GAAMiB,QAAO,SAACmE,GAAD,OAASA,EAAIlF,KAAOA,KACnE,OAAO,eAAGF,EAAOmF,OAxCP,EA4CdhG,cAAgB,SAACG,GAA0B,IAAnB+F,EAAkB,uDAAX,OAC7B9F,QAAQC,IAAI,SACZ,IAAM8F,EACK,SAATD,EAAkB,mBAAqB,qBACzC,EAAKzF,UAAS,SAAC2D,GAAD,sBACX+B,GAAa/B,EAAU+B,QA/C1B,EAAKnF,MAAQ,CACXsD,UAAW,aACXC,SAAU,YACVC,MAAO,QACPC,YAAa,QACb2B,WAAY,GACZ1D,MAAO,GACP2D,YAAa,GACbX,WAAY,GACZD,SAAU,GACVa,kBAAkB,EAClBC,oBAAoB,EACpBvC,cAAc,GAdJ,E,0CAqDd,WAAU,IAAD,OACDA,EAAe5B,KAAKpB,MAAMgD,aAC1BwC,EAAepE,KAAKpB,MAAMsF,iBAC9B,cAACG,EAAD,CACE3F,YAAasB,KAAKI,QAClBxC,cAAeoC,KAAKpC,gBAGtB,wBAAQL,UAAU,SAASI,QAASqC,KAAKpC,cAAzC,iBAII0G,EAAatE,KAAKpB,MAAMyE,SAASxD,KAAI,SAAC0E,GAAD,OACzC,eAAC,EAAD,CAEEzD,eAAgB,kBAAM,EAAK6C,WAAWY,EAAS5F,KAFjD,UAIE,iCACG4F,EAASzF,QADZ,KACuByF,EAASxF,SADhC,KAC4CwF,EAASvF,YAErD,uBACA,yCACQuF,EAAStF,SADjB,OAC+BsF,EAASlF,YARnCkF,EAAS5F,OAYZ6F,EAAaxE,KAAKpB,MAAMuF,mBAC5B,cAAC,EAAD,CACE/D,QAAS,SAACZ,GAAD,OAAU,EAAKY,QAAQZ,EAAM,eACtC5B,cAAe,SAAC6G,GAAD,OAAO,EAAK7G,cAAc6G,EAAG,aAG9C,wBACElH,UAAU,SACVI,QAAS,SAAC8G,GAAD,OAAO,EAAK7G,cAAc6G,EAAG,WAFxC,iBAOIC,EAAgB1E,KAAKpB,MAAM0E,WAAWzD,KAAI,SAACL,GAAD,OAC9C,eAAC,EAAD,CAEEmE,WAAY,kBAAM,EAAKA,WAAWnE,EAAKb,GAAI,eAF7C,UAIE,iCACGa,EAAKa,WADR,KACsBb,EAAKc,SAE3B,uBACA,yCACQd,EAAKe,WADb,OAC6Bf,EAAKgB,cAR7BhB,EAAKb,OAaV6D,EAAW,GAKf,OAJAD,EAAShD,SAAQ,SAACC,GAChBgD,EAAQ,2BAAQA,GAAR,kBAAmBhD,EAAO,EAAKZ,MAAMY,QAI7C,sBAAKjC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACE6F,QAASpD,KAAKoD,QACdxB,aAAc5B,KAAKpB,MAAMgD,eAE3B,sBAAKrE,UAAU,UAAf,UACE,cAAC,EAAD,CACEyD,kBAAmBhB,KAAKgB,kBACxBwB,SAAUA,EACVZ,aAAcA,IAEhB,eAAC,EAAD,CAAS1E,MAAM,mBAAf,UACGoH,EACA1C,GAAgBwC,KAEnB,eAAC,EAAD,CAASlH,MAAM,qBAAf,UACGwH,EACA9C,GAAgB4C,e,GApIXvE,aCJH0E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS9C,OACP,cAAC,IAAM+C,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e0aa378c.chunk.js","sourcesContent":["const InputData = [\n  {\n    title: \"firstName\",\n    type: \"text\",\n    description: \"Name\",\n  },\n  {\n    title: \"lastName\",\n    type: \"text\",\n    description: \"Name\",\n  },\n  {\n    title: \"email\",\n    type: \"email\",\n    description: \"Email\",\n  },\n  {\n    title: \"phoneNumber\",\n    type: \"phone\",\n    description: \"Phone\",\n  },\n  {\n    title: \"university\",\n    type: \"text\",\n    description: \"School name\",\n  },\n  {\n    title: \"major\",\n    type: \"text\",\n    description: \"Major\",\n  },\n  {\n    title: \"studyStart\",\n    type: \"number\",\n    description: \"Start year of study\",\n  },\n  {\n    title: \"studyEnd\",\n    type: \"number\",\n    description: \"End year of study\",\n  },\n  {\n    title: \"company\",\n    type: \"text\",\n    description: \"Company name\",\n  },\n  {\n    title: \"position\",\n    type: \"text\",\n    description: \"Position\",\n  },\n  {\n    title: \"mainTask\",\n    type: \"text\",\n    description: \"Main Task of Job\",\n  },\n  {\n    title: \"jobStart\",\n    type: \"date\",\n    description: \"Start Date of Job\",\n  },\n  {\n    title: \"jobEnd\",\n    type: \"date\",\n    description: \"End Date of Job\",\n  },\n];\n\nexport default InputData;\n","import \"./Form.scss\";\n\nexport default function Form(props) {\n  return (\n    <form className=\"form\" onSubmit={props.handleSubmit}>\n      {props.children}\n      <button type=\"submit\" className=\"button\">\n        Add\n      </button>\n      <button type=\"button\" onClick={props.toggleDisplay} className=\"button\">\n        Cancel\n      </button>\n    </form>\n  );\n}\n","import { Component } from \"react\";\nimport uniqid from \"uniqid\";\n\nimport InputData from \"../InputData\";\nimport { formatISO } from \"date-fns\";\nimport { workList as list } from \"../App\";\nimport Form from \"./Form\";\n\nclass WorkForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: uniqid(),\n      company: \"\",\n      position: \"\",\n      mainTask: \"\",\n      jobStart: formatISO(new Date(), { representation: \"date\" }),\n      jobEnd: formatISO(new Date(), { representation: \"date\" }),\n    };\n  }\n\n  handleChange = (event) => {\n    console.log(\"Changing\");\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const newWorkItem = this.getStateInList(list);\n    this.props.addWorkList({ ...newWorkItem, id: this.state.id });\n    this.setState({\n      id: uniqid(),\n      company: \"\",\n      position: \"\",\n      mainTask: \"\",\n      jobStart: formatISO(new Date(), { representation: \"date\" }),\n      jobEnd: formatISO(new Date(), { representation: \"date\" }),\n    });\n  };\n\n  getStateInList = (list) => {\n    let obj = {};\n    list.forEach((item) => {\n      obj = { ...obj, [item]: this.state[item] };\n    });\n    return obj;\n  };\n\n  render() {\n    const inputs = InputData.filter((input) => list.includes(input.title)).map(\n      (input) => {\n        return (\n          <div key={input.title} className=\"inputContainer\">\n            <label htmlFor={input.title} className=\"label\">\n              {input.description}\n            </label>\n            <input\n              id={input.title}\n              type={input.type}\n              name={input.title}\n              value={this.state[input.title]}\n              onChange={this.handleChange}\n            />\n          </div>\n        );\n      }\n    );\n    return (\n      <Form\n        handleSubmit={this.handleSubmit}\n        toggleDisplay={this.props.toggleDisplay}\n      >\n        {inputs}\n      </Form>\n    );\n  }\n}\n\nexport default WorkForm;\n","import { Component } from \"react\";\nimport uniqid from \"uniqid\";\n\nimport InputData from \"../InputData\";\nimport { formatISO, format } from \"date-fns\";\nimport { schoolList as list } from \"../App\";\nimport Form from \"./Form\";\n\nclass SchoolForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: uniqid(),\n      univeristy: \"\",\n      major: \"\",\n      studyStart: format(new Date(), \"yyyy\"),\n      studyEnd: format(new Date(), \"yyyy\"),\n    };\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const newItem = this.getStateInList(list);\n    this.props.addItem({ ...newItem, id: this.state.id });\n    this.setState({\n      id: uniqid(),\n      university: \"\",\n      major: \"\",\n      studyStart: formatISO(new Date(), \"yyyy\"),\n      studyEnd: formatISO(new Date(), \"yyyy\"),\n    });\n  };\n\n  getStateInList = (list) => {\n    let obj = {};\n    list.forEach((item) => {\n      obj = { ...obj, [item]: this.state[item] };\n    });\n    return obj;\n  };\n\n  render() {\n    const inputs = InputData.filter((input) => list.includes(input.title)).map(\n      (input) => {\n        return (\n          <div key={input.title} className=\"inputContainer\">\n            <label htmlFor={input.title} className=\"label\">\n              {input.description}\n            </label>\n            <input\n              id={input.title}\n              type={input.type}\n              name={input.title}\n              value={this.state[input.title]}\n              onChange={this.handleChange}\n            />\n          </div>\n        );\n      }\n    );\n    return (\n      <Form\n        handleSubmit={this.handleSubmit}\n        toggleDisplay={this.props.toggleDisplay}\n      >\n        {inputs}\n      </Form>\n    );\n  }\n}\n\nexport default SchoolForm;\n","import \"./Section.scss\";\n\nfunction Section(props) {\n  return (\n    <section className=\"section\">\n      <h2 className=\"section_title\">{props.title.toUpperCase()}</h2>\n      {props.children}\n    </section>\n  );\n}\n\nexport default Section;\n","import \"./Exp.scss\";\n\nexport default function Exp(props) {\n  const handleClick = () => {\n    props.removeWorkList();\n  };\n  return (\n    <div className=\"Exp\">\n      <div className=\"Exp-left\">{props.children}</div>\n      <div className=\"iconCtn\">\n        <button className=\"iconBtn\">\n          <span className=\"material-icons\" onClick={handleClick}>\n            delete\n          </span>\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { Component } from \"react\";\n\nexport default class SoloInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n    this.props.changeSingleState(this.props.data.title, event.target.value);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n    if (key === \"Enter\") {\n      this.props.toggleDisplay(this.props.data.title);\n    }\n  };\n\n  render() {\n    const { type, title } = this.props.data;\n\n    return (\n      <input\n        autoFocus={true}\n        tabIndex=\"0\"\n        type={type}\n        name={title}\n        value={this.state.value}\n        onChange={this.handleChange}\n        onKeyPress={this.handleKeyPress}\n        onBlur={() => this.props.toggleDisplay(this.props.data.title)}\n      ></input>\n    );\n  }\n}\n","import \"./DisplayField.scss\";\n\nexport default function DisplayField(props) {\n  const handleFocus = () => {\n    if (props.isInEditMode) {\n      props.toggleDisplay(props.fieldName);\n    }\n  };\n  let display;\n  let className = \"\";\n  if (props.fieldName === \"firstName\" || props.fieldName === \"lastName\") {\n    display = <h3 className=\"field_title\">{props.value}</h3>;\n    className += \" main\";\n  } else {\n    display = <p className=\"field_title\">{props.value}</p>;\n    className += \" sub\";\n  }\n\n  return (\n    <div\n      tabIndex=\"0\"\n      onFocus={handleFocus}\n      className={\"DisplayField\" + className}\n    >\n      {display}\n    </div>\n  );\n}\n","import { Component } from \"react\";\nimport InputData from \"../InputData\";\nimport SoloInput from \"./SoloInput\";\nimport { mainList } from \"../App\";\nimport DisplayField from \"./DisplayField\";\nimport \"./Main.scss\";\n\nexport default class MainSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: {\n        firstName: false,\n        lastName: false,\n        email: false,\n        phoneNumber: false,\n      },\n    };\n  }\n\n  getData = (name) => {\n    const dataArr = InputData.filter((item) => {\n      return item.title === name;\n    });\n    return dataArr[0];\n  };\n\n  toggleDisplay = (field) => {\n    this.setState((prevState) => {\n      return {\n        isEditing: {\n          ...prevState.isEditing,\n          [field]: !prevState.isEditing[field],\n        },\n      };\n    });\n  };\n\n  render() {\n    const render = {};\n    mainList.forEach((item) => {\n      render[item] = this.state.isEditing[item] ? (\n        <SoloInput\n          toggleDisplay={this.toggleDisplay}\n          data={this.getData(item)}\n          changeSingleState={this.props.changeSingleState}\n        />\n      ) : (\n        <DisplayField\n          toggleDisplay={this.toggleDisplay}\n          fieldName={item}\n          value={this.props.mainData[item]}\n          isInEditMode={this.props.isInEditMode}\n        />\n      );\n    });\n\n    return (\n      <div className=\"Main\">\n        <div className=\"Main_left\">\n          {render.firstName}\n          {render.lastName}\n        </div>\n        <div className=\"Main_right\">\n          <div className=\"subCtn\">\n            <span className=\"material-icons\">email</span>\n            {render.email}\n          </div>\n\n          <div className=\"subCtn\">\n            <span className=\"material-icons\">phone</span>\n            {render.phoneNumber}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import \"./Header.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\n\nconst element = <FontAwesomeIcon icon={faPaperPlane} size=\"6x\" />;\n\nfunction Header(props) {\n  return (\n    <div className=\"Header\">\n      {element}\n      <h1>CV Builder App</h1>\n    </div>\n  );\n}\n\nexport default Header;\n","import \"./ModeController.scss\";\n\nexport default function ModeController(props) {\n  const inInEditMode = props.isInEditMode;\n  const editClass = inInEditMode ? \" active\" : \"\";\n  const previewClass = inInEditMode ? \"\" : \" active\";\n\n  const handleClick = (button) => {\n    if (button === \"preview\" && inInEditMode) {\n      props.setMode(\"preview\");\n    } else if (button === \"edit\" && !inInEditMode) {\n      props.setMode(\"edit\");\n    }\n  };\n\n  return (\n    <div className=\"ModeController\">\n      <button\n        className={\"button edit\" + editClass}\n        onClick={() => handleClick(\"edit\")}\n      >\n        Edit Mode\n      </button>\n      <button\n        className={\"button preview\" + previewClass}\n        onClick={() => handleClick(\"preview\")}\n      >\n        Preview Mode\n      </button>\n    </div>\n  );\n}\n","import { Component } from \"react\";\nimport PracticalForm from \"./components/PracticalForm\";\nimport SchoolForm from \"./components/EducationalForm\";\nimport \"./App.scss\";\nimport \"modern-normalize/modern-normalize.css\";\nimport Section from \"./components/Section\";\nimport Exp from \"./components/Exp\";\nimport Main from \"./components/Main\";\nimport Header from \"./components/Header\";\nimport ModeController from \"./components/ModeController\";\n\n// import EducationalForm from \"./components/EducationalForm\";\nconst workList = [\"company\", \"position\", \"mainTask\", \"jobStart\", \"jobEnd\"];\nconst schoolList = [\"university\", \"major\", \"studyStart\", \"studyEnd\"];\nconst mainList = [\"firstName\", \"lastName\", \"email\", \"phoneNumber\"];\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"First Name\",\n      lastName: \"Last Name\",\n      email: \"Email\",\n      phoneNumber: \"Phone\",\n      schoolName: \"\",\n      major: \"\",\n      dateOfStudy: \"\",\n      schoolList: [],\n      workList: [],\n      isEditingWorkExp: false,\n      isEditingSchoolExp: false,\n      isInEditMode: true,\n    };\n  }\n\n  setMode = (mode) => {\n    if (mode === \"edit\") {\n      this.setState({ isInEditMode: true });\n    } else {\n      this.setState({ isInEditMode: false });\n    }\n  };\n\n  changeSingleState = (stateName, newValue) => {\n    this.setState({ [stateName]: newValue });\n    console.log(\"App\", this.state[stateName]);\n  };\n\n  addItem = (item, list = \"workList\") => {\n    this.setState((prevState) => {\n      return { [list]: [...prevState[list], item] };\n    });\n  };\n\n  removeItem = (id, list = \"workList\") => {\n    this.setState((prevState) => {\n      const updatedWorkList = prevState[list].filter((exp) => exp.id !== id);\n      return { [list]: updatedWorkList };\n    });\n  };\n\n  toggleDisplay = (event, form = \"work\") => {\n    console.log(\"click\");\n    const formState =\n      form === \"work\" ? \"isEditingWorkExp\" : \"isEditingSchoolExp\";\n    this.setState((prevState) => ({\n      [formState]: !prevState[formState],\n    }));\n  };\n\n  render() {\n    const isInEditMode = this.state.isInEditMode;\n    const practialForm = this.state.isEditingWorkExp ? (\n      <PracticalForm\n        addWorkList={this.addItem}\n        toggleDisplay={this.toggleDisplay}\n      />\n    ) : (\n      <button className=\"button\" onClick={this.toggleDisplay}>\n        Add\n      </button>\n    );\n    const workExpDiv = this.state.workList.map((workItem) => (\n      <Exp\n        key={workItem.id}\n        removeWorkList={() => this.removeItem(workItem.id)}\n      >\n        <span>\n          {workItem.company}, {workItem.position}, {workItem.mainTask}\n        </span>\n        <br />\n        <span>\n          From {workItem.jobStart} to {workItem.jobEnd}\n        </span>\n      </Exp>\n    ));\n    const schoolForm = this.state.isEditingSchoolExp ? (\n      <SchoolForm\n        addItem={(item) => this.addItem(item, \"schoolList\")}\n        toggleDisplay={(e) => this.toggleDisplay(e, \"school\")}\n      />\n    ) : (\n      <button\n        className=\"button\"\n        onClick={(e) => this.toggleDisplay(e, \"school\")}\n      >\n        Add\n      </button>\n    );\n    const schoolExpList = this.state.schoolList.map((item) => (\n      <Exp\n        key={item.id}\n        removeItem={() => this.removeItem(item.id, \"schoolList\")}\n      >\n        <span>\n          {item.university}, {item.major}\n        </span>\n        <br />\n        <span>\n          From {item.studyStart} to {item.studyEnd}\n        </span>\n      </Exp>\n    ));\n\n    let mainData = {};\n    mainList.forEach((item) => {\n      mainData = { ...mainData, [item]: this.state[item] };\n    });\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <ModeController\n          setMode={this.setMode}\n          isInEditMode={this.state.isInEditMode}\n        />\n        <div className=\"AppMain\">\n          <Main\n            changeSingleState={this.changeSingleState}\n            mainData={mainData}\n            isInEditMode={isInEditMode}\n          />\n          <Section title=\"Work Experiences\">\n            {workExpDiv}\n            {isInEditMode && practialForm}\n          </Section>\n          <Section title=\"School Experiences\">\n            {schoolExpList}\n            {isInEditMode && schoolForm}\n          </Section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\nexport { workList, schoolList, mainList };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}